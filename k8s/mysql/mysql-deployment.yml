apiVersion: v1
kind: Service
metadata:
  name: kc-order-mysql-service # mysql -h kc-order-mysql-service -u root -p
  labels:
    app: kims-convenience
    tier: database
    type: kc-order-mysql
spec:
  ports:
    - port: 3306
  selector:
    app: kims-convenience
    tier: database
    type: kc-order-mysql
  clusterIP: None

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: kc-order-mysql-deployment
  labels:
    app: kims-convenience
    tier: database
    type: kc-order-mysql
spec:
  selector:
    matchLabels:
      app: kims-convenience
      tier: database
      type: kc-order-mysql
  strategy:
    type: Recreate
  template:
    metadata:
      name: kc-order-mysql-pod
      labels:
        app: kims-convenience
        tier: database
        type: kc-order-mysql
    spec:
      containers:
        - image: mysql:5.6
          name: kc-order-mysql
          env:
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: kc-order-mysql-configmap
                  key: mysql-database-name
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kc-order-mysql-secret
                  key: mysql-root-password
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  name: kc-order-mysql-configmap
                  key: mysql-user-username
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: kc-order-mysql-secret
                  key: mysql-user-password
          livenessProbe:
            tcpSocket:
              port: 3306
          ports:
            - containerPort: 3306
              name: kc-order-mysql
          volumeMounts:
            - name: kc-order-mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:
        - name: kc-order-mysql-persistent-storage
          persistentVolumeClaim:
            claimName: kc-order-mysql-pvc

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: kc-order-mysql-pvc
  labels:
    app: kims-convenience
    tier: database
    type: kc-order-mysql
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: hostpath  # kubectl get storageclass